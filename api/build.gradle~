apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

group='com.xconns.peerdevicenet'
archivesBaseName='peerdevicenet-api'
version='1.1.8'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}


/* build class jar file */
def apiJarFile = file('bin/'+archivesBaseName+'-'+version+'.jar')

task clearJar(type: Delete) {
     delete 'bin/'+archivesBaseName+'-'+version+'.jar'
}

task jar(type: Copy) {
     from('build/intermediates/bundles/release/')
     into('bin/')
     include('classes.jar')
     rename('classes.jar', archivesBaseName+'-'+version+'.jar')
}

jar.dependsOn(clearJar, assembleRelease)

/* generate javadoc */

  task androidJavadocs(type: Javadoc, dependsOn: jar) {
     //options.overview="overview.html"
         source = android.sourceSets.main.java.srcDirs
        //source += files(android.sourceSets.main.generatedFiles)
        ext.androidJar = files(android.getBootClasspath())
        classpath += /*files(javaCompile.classpath.files) +*/ ext.androidJar
        exclude '**/R.html', '**/R.*.html', '**/index.html'
        exclude '**/*.aidl','**/package-info.java'
  }

  task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    baseName = archivesBaseName
    from androidJavadocs.destinationDir
  }

/* generate source code jar */
  task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    baseName = archivesBaseName
    from android.sourceSets.main.java.srcDirs 
    //from android.sourceSets.main.generatedFiles 
  } 

  artifacts {
    archives apiJarFile
    archives androidSourcesJar
    archives androidJavadocsJar
  }

/* signing */
  signing {
      sign configurations.archives
  }


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///tmp/myrepo")
            /*
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
               authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
               authentication(userName: ossrhUsername, password: ossrhPassword)
            }
           	*/
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.project {
                name archivesBaseName
                packaging 'jar'
                // optionally artifactId can be defined here 
                description 'client jar providing api to access PeerDeviceNet runtime.'
                url 'https://peerdevicenet.github.io'

                licenses {
                    license {
                       name 'The Apache License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                   developer {
                      name 'Yigong Liu'
                      email 'peerdevicenet@gmail.com'
                   }
                }

                scm {
                   connection 'scm:git:git@github.com:peerdevicenet/Router.git'
                   developerConnection 'scm:git:git@github.com:peerdevicenet/Router.git'
                   url 'git@github.com:peerdevicenet/Router.git'
                }
            }
        }
    }
}


uploadArchives.dependsOn(jar, androidSourcesJar, androidJavadocsJar)

